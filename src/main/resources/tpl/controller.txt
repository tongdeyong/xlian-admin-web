package com.xlian.${module}.controller;

import com.github.pagehelper.Page;
import com.xlian.common.vo.Result;
import com.xlian.${module}.vo.${ClassName}VO;
import com.xlian.${module}.model.${ClassName};
import com.xlian.${module}.service.${ClassName}Service;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@Slf4j
@RequestMapping("/${module}/${className}")
public class ${ClassName}Controller {

    @Autowired
    private ${ClassName}Service ${className}Service;

    @GetMapping("/list")
    public Result get${ClassName}PageList(${ClassName}VO ${className}VO) {
        try {
            List<${ClassName}VO> ${className}List = ${className}Service.findByCondition(${className}VO);
            if (${className}List instanceof Page) {
                Page page = (Page) ${className}List;
                return Result.ok(${className}List, page.getPageNum(), page.getPageSize(), (int) page.getTotal());
            }
            return Result.ok(${className}List);
        } catch (Exception e) {
            log.error(e.getMessage(), e);
            return Result.error(e.getMessage());
        }
    }

    @GetMapping("/all-list")
    public Result get${ClassName}AllList(${ClassName}VO ${className}VO) {
        try {
            List<${ClassName}VO> ${className}List = ${className}Service.findAll(${className}VO);
            return Result.ok(${className}List);
        } catch (Exception e) {
            log.error(e.getMessage(), e);
            return Result.error(e.getMessage());
        }
    }

    @PostMapping("/save")
    public Result save(@RequestBody ${ClassName} ${className}) {
        try {
            ${className}Service.save(${className});
            return Result.ok();
        } catch (Exception e) {
            log.error(e.getMessage(), e);
            return Result.error(e.getMessage());
        }
    }

    @RequestMapping("/update")
    public Result update(@RequestBody ${ClassName} ${className}) {
        try {
            ${className}Service.update(${className});
            return Result.ok();
        } catch (Exception e) {
            log.error(e.getMessage(), e);
            return Result.error(e.getMessage());
        }
    }

    @PostMapping("/delete/{${className}Id}")
    public Result remove(@PathVariable Integer ${className}Id) {
        try {
            ${className}Service.deleteById(${className}Id);
            return Result.ok();
        } catch (Exception e) {
            log.error(e.getMessage(), e);
            return Result.error(e.getMessage());
        }
    }
}
